# File: gen-stored-secret.yml
# Features:
# - Saves the secret to ~/.generated_secret
# - Exports it as an environment variable.

# Description: This snippet generates a random secret in Hex format using OpenSSL and stores it both as a file and as an environment variable.

# Variables:
# - length: The length of the generated secret. Default is "32".

# Command Steps:
# 1. Generate a random secret of specified length using OpenSSL.
# 2. Store the generated secret in a file with restricted permissions.
# 3. Export the secret as an environment variable.

snippets:
  - name: Generate & Store Secret
    command: |
      # Source the common functions and variables.
      source ./common-functions.sh

      LOG_FILE=~/.secret_log # If necessary, change this to a different path.
      SCRIPT="gen-stored-secret.sh"

      # Declare an associative array to hold variables.
      declare -A VARS=(
          ["length"]=""
      )

      # Add timing function and start stopwatch
      overall_start=$(date +%s%3N)

      # Validate all variables.
      start_validation=$(date +%s%3N)
      for var in "${!VARS[@]}"; do
          if ! check_dict_key VARS "$var"; then
              echo "Variable '${var}' is not set or invalid."
              echo "Please set the variable '${var}' to a valid value."
              exit 1
          fi
      done
      print_elapsed_time "Variable Validation" $start_validation $LOG_FILE $SCRIPT

      # Generate a random secret.
      start_secret_gen=$(date +%s%3N)
      SECRET=$(openssl rand -hex "${VARS["length"]}")
      print_elapsed_time "Secret Generation" $start_secret_gen $LOG_FILE $SCRIPT

      persist_start=$(date +%s%3N)

      echo "export SECRET=\"$SECRET\"" >> ~/.bashrc
      echo "export SECRET=\"$SECRET\"" >> ~/.zshrc
      echo "Secret added to ~/.bashrc and ~/.zshrc"

      persist_end=$(date +%s%3N)
      print_elapsed_time "Persistence" $persist_start $LOG_FILE $SCRIPT

      # Log the secret generation.
      if [ -f "$LOG_FILE" ]; then
          echo "[$(get_timestamp)] Secret generated (length: {{length}}, encrypted: {{encrypt}})" >> "$LOG_FILE"
      else
          touch "$LOG_FILE"
          echo "[$(get_timestamp)] Secret generated (length: {{length}}, encrypted: {{encrypt}})" > "$LOG_FILE"
          chmod 600 "$LOG_FILE"
      fi

      print_elapsed_time "Overall Runtime" $overall_start $LOG_FILE $SCRIPT

      # Log the script completion.
      if [ -n "$LOG_FILE" ]; then
          echo "Script completed successfully at $(date '+%d-%m-%Y %-I:%M%P')" >> "$LOG_FILE"
      fi

      echo "Script completed successfully."
    variables:
      - name: length
        default: "32"
        prompt: "Enter the length of the secret (min: 8, max: 64)"
        validation: "^[8-9]|[1-5][0-9]|6[0-4]$"
